{"version":3,"sources":["components/MondoBox.js","App.js","index.js"],"names":["MondoBox","render","react_default","a","createElement","Fragment","Box","className","pad","width","alignSelf","onClick","_this","props","handlePressBox","num","align","background","image","backgroundImage","opacity","round","gap","Heading","color","level","gioco","React","Component","giochi","App","onOpen","setState","open","onClose","undefined","state","video","switchVideo","handlePress","_this2","this","Grommet","full","Layer","position","modal","margin","onEsc","fill","dark","Video","loop","controls","autoPlay","src","type","Button","icon","LinkPrevious","primary","label","justify","direction","map","components_MondoBox","Share","size","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.65eaaffb.chunk.js","sourcesContent":["import React from \"react\";\nimport { Heading, Box } from \"grommet\";\n\nclass MondoBox extends React.Component {\n  render = () => {\n    return (\n      <>\n        <Box\n          className=\"il-mondo-box\"\n          pad=\"large\"\n          width=\"medium\"\n          alignSelf=\"center\"\n          onClick={() => this.props.handlePressBox(this.props.num)}\n          align=\"center\"\n          background={{\n            image: \"url(images/\" + this.props.backgroundImage + \")\",\n            opacity: \"strong\"\n          }}\n          round\n          gap=\"small\"\n        >\n          <Heading color=\"white\" level={1}>\n            {this.props.num}\n          </Heading>\n          <Heading color=\"white\" level={2}>\n            {this.props.gioco}\n          </Heading>\n        </Box>\n      </>\n    );\n  };\n}\n\nexport default MondoBox;\n","import React, { Component } from \"react\";\n\nimport { Grommet, Box, Video, Layer, Button, Heading } from \"grommet\";\nimport { LinkPrevious, Share } from \"grommet-icons\";\nimport MondoBox from \"./components/MondoBox\";\n\nimport \"./App.css\";\n\n/*\nimport io from \"socket.io-client\";\n\nvar socket = io(\"http://localhost:5000\", {\n  transports: [\"websocket\"]\n});\n*/\n\nconst giochi = [\n  {\n    backgroundImage: \"1MANCALA.jpg\",\n    num: 1,\n    gioco: \"MancÃ la\"\n  },\n  {\n    backgroundImage: \"2CERCHIO.jpg\",\n    num: 2,\n    gioco: \"Cerchio\"\n  },\n  {\n    backgroundImage: \"3KENDAMA.jpg\",\n    num: 3,\n    gioco: \"Kendama\"\n  },\n  {\n    backgroundImage: \"4JIANZI.jpg\",\n    num: 4,\n    gioco: \"Jianzi\"\n  },\n  {\n    backgroundImage: \"5MAROMERO.jpg\",\n    num: 5,\n    gioco: \"Maromero\"\n  },\n  {\n    backgroundImage: \"6BOOMERANG.jpg\",\n    num: 6,\n    gioco: \"Boomerang\"\n  }\n];\n\nclass App extends Component {\n  onOpen = () => this.setState({ open: true });\n\n  onClose = () => this.setState({ open: undefined });\n\n  state = {\n    open: undefined,\n    video: null\n  };\n\n  switchVideo = num => {\n    switch (num) {\n      case 1:\n        this.setState({ video: \"./video/gioco-1.mp4\" }, () => {\n          this.setState({ open: true });\n        });\n        break;\n      case 2:\n        this.setState({ video: \"./video/gioco-2.mp4\" }, () => {\n          this.setState({ open: true });\n        });\n        break;\n      case 3:\n        this.setState({ video: \"./video/gioco-3.mp4\" }, () => {\n          this.setState({ open: true });\n        });\n        break;\n      case 4:\n        this.setState({ video: \"./video/gioco-4.mp4\" }, () => {\n          this.setState({ open: true });\n        });\n        break;\n      case 5:\n        this.setState({ video: \"./video/gioco-5.mp4\" }, () => {\n          this.setState({ open: true });\n        });\n        break;\n      case 6:\n        this.setState({ video: \"./video/gioco-6.mp4\" }, () => {\n          this.setState({ open: true });\n        });\n        break;\n      default:\n        this.setState({ video: \"./video/gioco-1.mp4\" }, () => {\n          this.setState({ open: true });\n        });\n    }\n  };\n\n  handlePress = num => {\n    this.switchVideo(num);\n  };\n\n  componentDidMount() {\n    /*\n    socket.on(\"button-pressed\", data => {\n      console.log(new Date().getTime() + \" \" + data);\n      this.switchVideo(data.value);\n    });\n    */\n  }\n\n  render() {\n    return (\n      <>\n        <Grommet full>\n          {this.state.open && this.state.video && (\n            <Layer\n              position=\"center\"\n              modal\n              full\n              margin=\"none\"\n              onEsc={this.onClose}\n            >\n              <Box\n                fill={true}\n                background={{\n                  color: \"dark-1\",\n                  dark: true,\n                  position: \"bottom\",\n                  image: \"url(images/background.png)\"\n                }}\n                pad=\"medium\"\n                gap=\"small\"\n                width=\"xlarge\"\n              >\n                <Video loop={true} controls={false} autoPlay={true}>\n                  <source src={this.state.video} type=\"video/mp4\" />\n                </Video>\n                <Button\n                  icon={<LinkPrevious color=\"white\" />}\n                  primary\n                  color=\"neutral-4\"\n                  label=\"Torna indietro\"\n                  onClick={this.onClose}\n                />\n              </Box>\n            </Layer>\n          )}\n          <Box\n            justify=\"center\"\n            align=\"center\"\n            alignSelf=\"center\"\n            background=\"url(images/background.png)\"\n            fill\n          >\n            <Heading color=\"white\" level={1}>\n              il mondo in gioco\n            </Heading>\n            <Box direction=\"row-responsive\" pad=\"xlarge\" gap=\"medium\" fill>\n              {giochi.map(gioco => (\n                <MondoBox\n                  handlePressBox={this.handlePress}\n                  onClick={this.onOpen}\n                  backgroundImage={gioco.backgroundImage}\n                  gioco={gioco.gioco}\n                  num={gioco.num}\n                />\n              ))}\n            </Box>\n            <Heading color=\"white\" level={3}>\n              <Share size=\"small\" color=\"white\" />{\" \"}\n              <u>ilmondoingioco.betharram.it</u>\n            </Heading>\n          </Box>\n        </Grommet>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}